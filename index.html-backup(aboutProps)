<!DOCTYPE html>
<html lang="en">
  <body>
    <div id="root"></div>
  </body>
  <script src="https://unpkg.com/react@17.0.2/umd/react.development.js"></script>
  <script src="https://unpkg.com/react-dom@17.0.2/umd/react-dom.development.js"></script>
  <script src="https://unpkg.com/prop-types@15.7.2/prop-types.js"></script>
  <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
  <script type="text/babel">
    // this is also possible
    // function Btn({banana})
    // function Btn(props) {
    //   console.log(props);
    //   return (
    //     <button
    //       style={{
    //         backgroundColor: 'tomato',
    //         color: 'white',
    //         padding: '10px 20px',
    //         border: 0,
    //         borderRadius: 10,
    //         fontSize: props.big ? 18 : 16,
    //       }}
    //     >
    //       {props.banana}
    //     </button>
    //   );
    // }
    function Btn({ text, big, onClick, fontSize }) {
      console.log(text, 'was renderd');
      return (
        <button
          style={{
            backgroundColor: 'tomato',
            color: 'white',
            padding: '10px 20px',
            border: 0,
            borderRadius: 10,
            fontSize: fontSize,
          }}
          onClick={onClick}
        >
          {text}
        </button>
      );
    }
    const MemorizedBtn = React.memo(Btn);
    Btn.propTypes = {
      text: PropTypes.string.isRequired,
      fontSize: PropTypes.number,
    };
    function App() {
      const [value, setValue] = React.useState('Save Changes');
      const changeValue = () => setValue('Revert Changes');
      return (
        <div>
          <MemorizedBtn
            text={value}
            fontSize={12}
            onClick={changeValue}
            big={true}
          />
          <MemorizedBtn fontSize={18} text={'Confirm'} big={false} />
        </div>
      );
    }
    const root = document.getElementById('root');
    ReactDOM.render(<App />, root);
    // 이거 뭐야
  </script>
</html>
